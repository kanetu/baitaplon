#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ThueXe
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QUANLITHUEXE")]
	public partial class CSDLDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBANGCAP(BANGCAP instance);
    partial void UpdateBANGCAP(BANGCAP instance);
    partial void DeleteBANGCAP(BANGCAP instance);
    partial void InsertOTO(OTO instance);
    partial void UpdateOTO(OTO instance);
    partial void DeleteOTO(OTO instance);
    partial void InsertDANGNHAP(DANGNHAP instance);
    partial void UpdateDANGNHAP(DANGNHAP instance);
    partial void DeleteDANGNHAP(DANGNHAP instance);
    partial void InsertHOPDONG(HOPDONG instance);
    partial void UpdateHOPDONG(HOPDONG instance);
    partial void DeleteHOPDONG(HOPDONG instance);
    partial void InsertKHACHHANG(KHACHHANG instance);
    partial void UpdateKHACHHANG(KHACHHANG instance);
    partial void DeleteKHACHHANG(KHACHHANG instance);
    partial void InsertNHANVIEN(NHANVIEN instance);
    partial void UpdateNHANVIEN(NHANVIEN instance);
    partial void DeleteNHANVIEN(NHANVIEN instance);
    partial void InsertTAIXE(TAIXE instance);
    partial void UpdateTAIXE(TAIXE instance);
    partial void DeleteTAIXE(TAIXE instance);
    #endregion
		
		public CSDLDataContext() : 
				base(global::ThueXe.Properties.Settings.Default.QUANLITHUEXEConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CSDLDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CSDLDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CSDLDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CSDLDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BANGCAP> BANGCAPs
		{
			get
			{
				return this.GetTable<BANGCAP>();
			}
		}
		
		public System.Data.Linq.Table<OTO> OTOs
		{
			get
			{
				return this.GetTable<OTO>();
			}
		}
		
		public System.Data.Linq.Table<DANGNHAP> DANGNHAPs
		{
			get
			{
				return this.GetTable<DANGNHAP>();
			}
		}
		
		public System.Data.Linq.Table<HOPDONG> HOPDONGs
		{
			get
			{
				return this.GetTable<HOPDONG>();
			}
		}
		
		public System.Data.Linq.Table<KHACHHANG> KHACHHANGs
		{
			get
			{
				return this.GetTable<KHACHHANG>();
			}
		}
		
		public System.Data.Linq.Table<NHANVIEN> NHANVIENs
		{
			get
			{
				return this.GetTable<NHANVIEN>();
			}
		}
		
		public System.Data.Linq.Table<TAIXE> TAIXEs
		{
			get
			{
				return this.GetTable<TAIXE>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BANGCAP")]
	public partial class BANGCAP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MABANG;
		
		private string _TENBANG;
		
		private string _THOIGIANHIEULUC;
		
		private string _MATX;
		
		private EntityRef<TAIXE> _TAIXE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMABANGChanging(string value);
    partial void OnMABANGChanged();
    partial void OnTENBANGChanging(string value);
    partial void OnTENBANGChanged();
    partial void OnTHOIGIANHIEULUCChanging(string value);
    partial void OnTHOIGIANHIEULUCChanged();
    partial void OnMATXChanging(string value);
    partial void OnMATXChanged();
    #endregion
		
		public BANGCAP()
		{
			this._TAIXE = default(EntityRef<TAIXE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MABANG", DbType="Char(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MABANG
		{
			get
			{
				return this._MABANG;
			}
			set
			{
				if ((this._MABANG != value))
				{
					this.OnMABANGChanging(value);
					this.SendPropertyChanging();
					this._MABANG = value;
					this.SendPropertyChanged("MABANG");
					this.OnMABANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENBANG", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TENBANG
		{
			get
			{
				return this._TENBANG;
			}
			set
			{
				if ((this._TENBANG != value))
				{
					this.OnTENBANGChanging(value);
					this.SendPropertyChanging();
					this._TENBANG = value;
					this.SendPropertyChanged("TENBANG");
					this.OnTENBANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THOIGIANHIEULUC", DbType="Char(3) NOT NULL", CanBeNull=false)]
		public string THOIGIANHIEULUC
		{
			get
			{
				return this._THOIGIANHIEULUC;
			}
			set
			{
				if ((this._THOIGIANHIEULUC != value))
				{
					this.OnTHOIGIANHIEULUCChanging(value);
					this.SendPropertyChanging();
					this._THOIGIANHIEULUC = value;
					this.SendPropertyChanged("THOIGIANHIEULUC");
					this.OnTHOIGIANHIEULUCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATX", DbType="Char(6) NOT NULL", CanBeNull=false)]
		public string MATX
		{
			get
			{
				return this._MATX;
			}
			set
			{
				if ((this._MATX != value))
				{
					if (this._TAIXE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMATXChanging(value);
					this.SendPropertyChanging();
					this._MATX = value;
					this.SendPropertyChanged("MATX");
					this.OnMATXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAIXE_BANGCAP", Storage="_TAIXE", ThisKey="MATX", OtherKey="MATX", IsForeignKey=true)]
		public TAIXE TAIXE
		{
			get
			{
				return this._TAIXE.Entity;
			}
			set
			{
				TAIXE previousValue = this._TAIXE.Entity;
				if (((previousValue != value) 
							|| (this._TAIXE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TAIXE.Entity = null;
						previousValue.BANGCAPs.Remove(this);
					}
					this._TAIXE.Entity = value;
					if ((value != null))
					{
						value.BANGCAPs.Add(this);
						this._MATX = value.MATX;
					}
					else
					{
						this._MATX = default(string);
					}
					this.SendPropertyChanged("TAIXE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OTO")]
	public partial class OTO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAOTO;
		
		private string _TENOTO;
		
		private string _SOGHE;
		
		private string _TRANGTHAI;
		
		private EntitySet<HOPDONG> _HOPDONGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAOTOChanging(string value);
    partial void OnMAOTOChanged();
    partial void OnTENOTOChanging(string value);
    partial void OnTENOTOChanged();
    partial void OnSOGHEChanging(string value);
    partial void OnSOGHEChanged();
    partial void OnTRANGTHAIChanging(string value);
    partial void OnTRANGTHAIChanged();
    #endregion
		
		public OTO()
		{
			this._HOPDONGs = new EntitySet<HOPDONG>(new Action<HOPDONG>(this.attach_HOPDONGs), new Action<HOPDONG>(this.detach_HOPDONGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAOTO", DbType="Char(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAOTO
		{
			get
			{
				return this._MAOTO;
			}
			set
			{
				if ((this._MAOTO != value))
				{
					this.OnMAOTOChanging(value);
					this.SendPropertyChanging();
					this._MAOTO = value;
					this.SendPropertyChanged("MAOTO");
					this.OnMAOTOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENOTO", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TENOTO
		{
			get
			{
				return this._TENOTO;
			}
			set
			{
				if ((this._TENOTO != value))
				{
					this.OnTENOTOChanging(value);
					this.SendPropertyChanging();
					this._TENOTO = value;
					this.SendPropertyChanged("TENOTO");
					this.OnTENOTOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOGHE", DbType="Char(3) NOT NULL", CanBeNull=false)]
		public string SOGHE
		{
			get
			{
				return this._SOGHE;
			}
			set
			{
				if ((this._SOGHE != value))
				{
					this.OnSOGHEChanging(value);
					this.SendPropertyChanging();
					this._SOGHE = value;
					this.SendPropertyChanged("SOGHE");
					this.OnSOGHEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRANGTHAI", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TRANGTHAI
		{
			get
			{
				return this._TRANGTHAI;
			}
			set
			{
				if ((this._TRANGTHAI != value))
				{
					this.OnTRANGTHAIChanging(value);
					this.SendPropertyChanging();
					this._TRANGTHAI = value;
					this.SendPropertyChanged("TRANGTHAI");
					this.OnTRANGTHAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OTO_HOPDONG", Storage="_HOPDONGs", ThisKey="MAOTO", OtherKey="MAOTO_F")]
		public EntitySet<HOPDONG> HOPDONGs
		{
			get
			{
				return this._HOPDONGs;
			}
			set
			{
				this._HOPDONGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOPDONGs(HOPDONG entity)
		{
			this.SendPropertyChanging();
			entity.OTO = this;
		}
		
		private void detach_HOPDONGs(HOPDONG entity)
		{
			this.SendPropertyChanging();
			entity.OTO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DANGNHAP")]
	public partial class DANGNHAP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TAIKHOAN;
		
		private string _MATKHAU;
		
		private System.Nullable<int> _QUYEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTAIKHOANChanging(string value);
    partial void OnTAIKHOANChanged();
    partial void OnMATKHAUChanging(string value);
    partial void OnMATKHAUChanged();
    partial void OnQUYENChanging(System.Nullable<int> value);
    partial void OnQUYENChanged();
    #endregion
		
		public DANGNHAP()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TAIKHOAN", DbType="Char(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TAIKHOAN
		{
			get
			{
				return this._TAIKHOAN;
			}
			set
			{
				if ((this._TAIKHOAN != value))
				{
					this.OnTAIKHOANChanging(value);
					this.SendPropertyChanging();
					this._TAIKHOAN = value;
					this.SendPropertyChanged("TAIKHOAN");
					this.OnTAIKHOANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATKHAU", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string MATKHAU
		{
			get
			{
				return this._MATKHAU;
			}
			set
			{
				if ((this._MATKHAU != value))
				{
					this.OnMATKHAUChanging(value);
					this.SendPropertyChanging();
					this._MATKHAU = value;
					this.SendPropertyChanged("MATKHAU");
					this.OnMATKHAUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUYEN", DbType="Int")]
		public System.Nullable<int> QUYEN
		{
			get
			{
				return this._QUYEN;
			}
			set
			{
				if ((this._QUYEN != value))
				{
					this.OnQUYENChanging(value);
					this.SendPropertyChanging();
					this._QUYEN = value;
					this.SendPropertyChanged("QUYEN");
					this.OnQUYENChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOPDONG")]
	public partial class HOPDONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAHD;
		
		private string _TENHD;
		
		private System.Nullable<System.DateTime> _NGAYTHUE;
		
		private System.Nullable<System.DateTime> _NGAYTRA;
		
		private string _DIADIEM;
		
		private double _TIENTHUE;
		
		private string _MANV_F;
		
		private string _MAOTO_F;
		
		private string _MATX_F;
		
		private string _MAKH_F;
		
		private EntityRef<OTO> _OTO;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
		private EntityRef<TAIXE> _TAIXE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAHDChanging(string value);
    partial void OnMAHDChanged();
    partial void OnTENHDChanging(string value);
    partial void OnTENHDChanged();
    partial void OnNGAYTHUEChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYTHUEChanged();
    partial void OnNGAYTRAChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYTRAChanged();
    partial void OnDIADIEMChanging(string value);
    partial void OnDIADIEMChanged();
    partial void OnTIENTHUEChanging(double value);
    partial void OnTIENTHUEChanged();
    partial void OnMANV_FChanging(string value);
    partial void OnMANV_FChanged();
    partial void OnMAOTO_FChanging(string value);
    partial void OnMAOTO_FChanged();
    partial void OnMATX_FChanging(string value);
    partial void OnMATX_FChanged();
    partial void OnMAKH_FChanging(string value);
    partial void OnMAKH_FChanged();
    #endregion
		
		public HOPDONG()
		{
			this._OTO = default(EntityRef<OTO>);
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			this._TAIXE = default(EntityRef<TAIXE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHD", DbType="Char(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAHD
		{
			get
			{
				return this._MAHD;
			}
			set
			{
				if ((this._MAHD != value))
				{
					this.OnMAHDChanging(value);
					this.SendPropertyChanging();
					this._MAHD = value;
					this.SendPropertyChanged("MAHD");
					this.OnMAHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENHD", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TENHD
		{
			get
			{
				return this._TENHD;
			}
			set
			{
				if ((this._TENHD != value))
				{
					this.OnTENHDChanging(value);
					this.SendPropertyChanging();
					this._TENHD = value;
					this.SendPropertyChanged("TENHD");
					this.OnTENHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYTHUE", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYTHUE
		{
			get
			{
				return this._NGAYTHUE;
			}
			set
			{
				if ((this._NGAYTHUE != value))
				{
					this.OnNGAYTHUEChanging(value);
					this.SendPropertyChanging();
					this._NGAYTHUE = value;
					this.SendPropertyChanged("NGAYTHUE");
					this.OnNGAYTHUEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYTRA", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYTRA
		{
			get
			{
				return this._NGAYTRA;
			}
			set
			{
				if ((this._NGAYTRA != value))
				{
					this.OnNGAYTRAChanging(value);
					this.SendPropertyChanging();
					this._NGAYTRA = value;
					this.SendPropertyChanged("NGAYTRA");
					this.OnNGAYTRAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIADIEM", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string DIADIEM
		{
			get
			{
				return this._DIADIEM;
			}
			set
			{
				if ((this._DIADIEM != value))
				{
					this.OnDIADIEMChanging(value);
					this.SendPropertyChanging();
					this._DIADIEM = value;
					this.SendPropertyChanged("DIADIEM");
					this.OnDIADIEMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIENTHUE", DbType="Float NOT NULL")]
		public double TIENTHUE
		{
			get
			{
				return this._TIENTHUE;
			}
			set
			{
				if ((this._TIENTHUE != value))
				{
					this.OnTIENTHUEChanging(value);
					this.SendPropertyChanging();
					this._TIENTHUE = value;
					this.SendPropertyChanged("TIENTHUE");
					this.OnTIENTHUEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANV_F", DbType="Char(6) NOT NULL", CanBeNull=false)]
		public string MANV_F
		{
			get
			{
				return this._MANV_F;
			}
			set
			{
				if ((this._MANV_F != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANV_FChanging(value);
					this.SendPropertyChanging();
					this._MANV_F = value;
					this.SendPropertyChanged("MANV_F");
					this.OnMANV_FChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAOTO_F", DbType="Char(6) NOT NULL", CanBeNull=false)]
		public string MAOTO_F
		{
			get
			{
				return this._MAOTO_F;
			}
			set
			{
				if ((this._MAOTO_F != value))
				{
					if (this._OTO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAOTO_FChanging(value);
					this.SendPropertyChanging();
					this._MAOTO_F = value;
					this.SendPropertyChanged("MAOTO_F");
					this.OnMAOTO_FChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATX_F", DbType="Char(6) NOT NULL", CanBeNull=false)]
		public string MATX_F
		{
			get
			{
				return this._MATX_F;
			}
			set
			{
				if ((this._MATX_F != value))
				{
					if (this._TAIXE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMATX_FChanging(value);
					this.SendPropertyChanging();
					this._MATX_F = value;
					this.SendPropertyChanged("MATX_F");
					this.OnMATX_FChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKH_F", DbType="Char(6) NOT NULL", CanBeNull=false)]
		public string MAKH_F
		{
			get
			{
				return this._MAKH_F;
			}
			set
			{
				if ((this._MAKH_F != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAKH_FChanging(value);
					this.SendPropertyChanging();
					this._MAKH_F = value;
					this.SendPropertyChanged("MAKH_F");
					this.OnMAKH_FChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OTO_HOPDONG", Storage="_OTO", ThisKey="MAOTO_F", OtherKey="MAOTO", IsForeignKey=true)]
		public OTO OTO
		{
			get
			{
				return this._OTO.Entity;
			}
			set
			{
				OTO previousValue = this._OTO.Entity;
				if (((previousValue != value) 
							|| (this._OTO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OTO.Entity = null;
						previousValue.HOPDONGs.Remove(this);
					}
					this._OTO.Entity = value;
					if ((value != null))
					{
						value.HOPDONGs.Add(this);
						this._MAOTO_F = value.MAOTO;
					}
					else
					{
						this._MAOTO_F = default(string);
					}
					this.SendPropertyChanged("OTO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_HOPDONG", Storage="_KHACHHANG", ThisKey="MAKH_F", OtherKey="MAKH", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.HOPDONGs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.HOPDONGs.Add(this);
						this._MAKH_F = value.MAKH;
					}
					else
					{
						this._MAKH_F = default(string);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_HOPDONG", Storage="_NHANVIEN", ThisKey="MANV_F", OtherKey="MANV", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.HOPDONGs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.HOPDONGs.Add(this);
						this._MANV_F = value.MANV;
					}
					else
					{
						this._MANV_F = default(string);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAIXE_HOPDONG", Storage="_TAIXE", ThisKey="MATX_F", OtherKey="MATX", IsForeignKey=true)]
		public TAIXE TAIXE
		{
			get
			{
				return this._TAIXE.Entity;
			}
			set
			{
				TAIXE previousValue = this._TAIXE.Entity;
				if (((previousValue != value) 
							|| (this._TAIXE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TAIXE.Entity = null;
						previousValue.HOPDONGs.Remove(this);
					}
					this._TAIXE.Entity = value;
					if ((value != null))
					{
						value.HOPDONGs.Add(this);
						this._MATX_F = value.MATX;
					}
					else
					{
						this._MATX_F = default(string);
					}
					this.SendPropertyChanged("TAIXE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHACHHANG")]
	public partial class KHACHHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAKH;
		
		private string _TENKH;
		
		private string _CMND;
		
		private string _DIACHI;
		
		private string _SDT;
		
		private EntitySet<HOPDONG> _HOPDONGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAKHChanging(string value);
    partial void OnMAKHChanged();
    partial void OnTENKHChanging(string value);
    partial void OnTENKHChanged();
    partial void OnCMNDChanging(string value);
    partial void OnCMNDChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    #endregion
		
		public KHACHHANG()
		{
			this._HOPDONGs = new EntitySet<HOPDONG>(new Action<HOPDONG>(this.attach_HOPDONGs), new Action<HOPDONG>(this.detach_HOPDONGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKH", DbType="Char(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAKH
		{
			get
			{
				return this._MAKH;
			}
			set
			{
				if ((this._MAKH != value))
				{
					this.OnMAKHChanging(value);
					this.SendPropertyChanging();
					this._MAKH = value;
					this.SendPropertyChanged("MAKH");
					this.OnMAKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENKH", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TENKH
		{
			get
			{
				return this._TENKH;
			}
			set
			{
				if ((this._TENKH != value))
				{
					this.OnTENKHChanging(value);
					this.SendPropertyChanging();
					this._TENKH = value;
					this.SendPropertyChanged("TENKH");
					this.OnTENKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMND", DbType="Char(12) NOT NULL", CanBeNull=false)]
		public string CMND
		{
			get
			{
				return this._CMND;
			}
			set
			{
				if ((this._CMND != value))
				{
					this.OnCMNDChanging(value);
					this.SendPropertyChanging();
					this._CMND = value;
					this.SendPropertyChanged("CMND");
					this.OnCMNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="Char(11) NOT NULL", CanBeNull=false)]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_HOPDONG", Storage="_HOPDONGs", ThisKey="MAKH", OtherKey="MAKH_F")]
		public EntitySet<HOPDONG> HOPDONGs
		{
			get
			{
				return this._HOPDONGs;
			}
			set
			{
				this._HOPDONGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOPDONGs(HOPDONG entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_HOPDONGs(HOPDONG entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHANVIEN")]
	public partial class NHANVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MANV;
		
		private string _TENNV;
		
		private System.Nullable<System.DateTime> _NGAYSINH;
		
		private string _DIACHI;
		
		private string _SDT;
		
		private EntitySet<HOPDONG> _HOPDONGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMANVChanging(string value);
    partial void OnMANVChanged();
    partial void OnTENNVChanging(string value);
    partial void OnTENNVChanged();
    partial void OnNGAYSINHChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYSINHChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    #endregion
		
		public NHANVIEN()
		{
			this._HOPDONGs = new EntitySet<HOPDONG>(new Action<HOPDONG>(this.attach_HOPDONGs), new Action<HOPDONG>(this.detach_HOPDONGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANV", DbType="Char(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MANV
		{
			get
			{
				return this._MANV;
			}
			set
			{
				if ((this._MANV != value))
				{
					this.OnMANVChanging(value);
					this.SendPropertyChanging();
					this._MANV = value;
					this.SendPropertyChanged("MANV");
					this.OnMANVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENNV", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TENNV
		{
			get
			{
				return this._TENNV;
			}
			set
			{
				if ((this._TENNV != value))
				{
					this.OnTENNVChanging(value);
					this.SendPropertyChanging();
					this._TENNV = value;
					this.SendPropertyChanged("TENNV");
					this.OnTENNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYSINH", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYSINH
		{
			get
			{
				return this._NGAYSINH;
			}
			set
			{
				if ((this._NGAYSINH != value))
				{
					this.OnNGAYSINHChanging(value);
					this.SendPropertyChanging();
					this._NGAYSINH = value;
					this.SendPropertyChanged("NGAYSINH");
					this.OnNGAYSINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="Char(11) NOT NULL", CanBeNull=false)]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_HOPDONG", Storage="_HOPDONGs", ThisKey="MANV", OtherKey="MANV_F")]
		public EntitySet<HOPDONG> HOPDONGs
		{
			get
			{
				return this._HOPDONGs;
			}
			set
			{
				this._HOPDONGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOPDONGs(HOPDONG entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_HOPDONGs(HOPDONG entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TAIXE")]
	public partial class TAIXE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MATX;
		
		private string _TENTX;
		
		private string _CMND;
		
		private string _DIACHI;
		
		private string _SDT;
		
		private EntitySet<BANGCAP> _BANGCAPs;
		
		private EntitySet<HOPDONG> _HOPDONGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMATXChanging(string value);
    partial void OnMATXChanged();
    partial void OnTENTXChanging(string value);
    partial void OnTENTXChanged();
    partial void OnCMNDChanging(string value);
    partial void OnCMNDChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    #endregion
		
		public TAIXE()
		{
			this._BANGCAPs = new EntitySet<BANGCAP>(new Action<BANGCAP>(this.attach_BANGCAPs), new Action<BANGCAP>(this.detach_BANGCAPs));
			this._HOPDONGs = new EntitySet<HOPDONG>(new Action<HOPDONG>(this.attach_HOPDONGs), new Action<HOPDONG>(this.detach_HOPDONGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATX", DbType="Char(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MATX
		{
			get
			{
				return this._MATX;
			}
			set
			{
				if ((this._MATX != value))
				{
					this.OnMATXChanging(value);
					this.SendPropertyChanging();
					this._MATX = value;
					this.SendPropertyChanged("MATX");
					this.OnMATXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENTX", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TENTX
		{
			get
			{
				return this._TENTX;
			}
			set
			{
				if ((this._TENTX != value))
				{
					this.OnTENTXChanging(value);
					this.SendPropertyChanging();
					this._TENTX = value;
					this.SendPropertyChanged("TENTX");
					this.OnTENTXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMND", DbType="Char(12) NOT NULL", CanBeNull=false)]
		public string CMND
		{
			get
			{
				return this._CMND;
			}
			set
			{
				if ((this._CMND != value))
				{
					this.OnCMNDChanging(value);
					this.SendPropertyChanging();
					this._CMND = value;
					this.SendPropertyChanged("CMND");
					this.OnCMNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="Char(11) NOT NULL", CanBeNull=false)]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAIXE_BANGCAP", Storage="_BANGCAPs", ThisKey="MATX", OtherKey="MATX")]
		public EntitySet<BANGCAP> BANGCAPs
		{
			get
			{
				return this._BANGCAPs;
			}
			set
			{
				this._BANGCAPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAIXE_HOPDONG", Storage="_HOPDONGs", ThisKey="MATX", OtherKey="MATX_F")]
		public EntitySet<HOPDONG> HOPDONGs
		{
			get
			{
				return this._HOPDONGs;
			}
			set
			{
				this._HOPDONGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BANGCAPs(BANGCAP entity)
		{
			this.SendPropertyChanging();
			entity.TAIXE = this;
		}
		
		private void detach_BANGCAPs(BANGCAP entity)
		{
			this.SendPropertyChanging();
			entity.TAIXE = null;
		}
		
		private void attach_HOPDONGs(HOPDONG entity)
		{
			this.SendPropertyChanging();
			entity.TAIXE = this;
		}
		
		private void detach_HOPDONGs(HOPDONG entity)
		{
			this.SendPropertyChanging();
			entity.TAIXE = null;
		}
	}
}
#pragma warning restore 1591
